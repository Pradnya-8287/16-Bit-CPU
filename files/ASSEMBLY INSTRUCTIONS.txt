0000 NO OPPERATION
0100 LDA: LOAD VALUE FROM RAM TO THE ACCUMULATOR

0001 0006 0010 0002 0000 0000 0000 0000

0001 0002 0001 0004 0000 0000 0000 0000

0200 LDB: LOAD VALUE FROM RAM TO THE B REGISTER

0001 0006 0010 0002 0000 0000 0000 0000

0001 0002 0001 0008 0000 0000 0000 0000

0300 LDX: LOAD VALUE FROM RAM TO THE X REGISTER

0001 0006 0010 0002 0000 0000 0000 0000

0001 0002 0001 0020 0000 0000 0000 0000

0400 LDY: LOAD VALUE FROM RAM TO THE Y REGISTER

0001 0006 0010 0002 0000 0000 0000 0000

0001 0002 0001 0040 0000 0000 0000 0000

0500 LDT: LOAD VALUE FROM RAM TO THE TTY DISPLAY

0001 0006 0010 0002 0000 0000 0000 0000

0001 0002 0001 0100 0000 0000 0000 0000



0600 LIA: LOAD IMMEDIATE VALUE TO THE ACCUMULATOR

0001 0006 0010 0000 0000 0000 0000 0000

0001 0002 0004 0000 0000 0000 0000 0000

0700 LIB: LOAD IMMEDIATE VALUE TO REGISTER B
0001 0006 0010 0001 0000 0000 0000 0000

0001 0002 0008 0000 0000 0000 0000 0000

0800 LIX: LOAD IMMEDIATE VALUE TO REGISTER X

0001 0006 0010 0000 0000 0000 0000 0000

0001 0002 0020 0000 0000 0000 0000 0000


0900 LIY: LOAD IMMEDIATE VALUE TO REGISTER Y

0001 0006 0010 0000 0000 0000 0000 0000

0001 0002 0040 0000 0000 0000 0000 0000


0A00 LIT: LOAD IMMEDIATE VALUE TO THE TTY DISPLAY

0001 0006 0010 0000 0000 0000 0000 0000

0001 0002 0100 0000 0000 0000 0000 0000



0B00 STA: STORE ACCUMULATOR VALUE TO RAM

0001 0006 0010 2000 0000 0000 0000 0000

0001 0002 0001 0400 0000 0000 0000 0000

0C00 STB: STORE REGISTER B VALUE TO RAM

0001 0006 0010 0080 0000 0000 0000 0000

0001 0002 0001 0400 0000 0000 0000 0000

0D00 STX: STORE REGISTER X VALUE TO RAM

0001 0006 0010 0020 0000 0000 0000 0000

0001 0002 0001 0400 0000 0000 0000 0000

0E00 STY: STORE REGISTER Y VALUE TO RAM

0001 0006 0010 0040 0000 0000 0000 0000

0001 0002 0001 0400 0000 0000 0000 0000

0F00 STK: STORE KEYBOARD REG VALUE TO RAM 

0001 0006 0010 0100 0000 0000 0000 0000

0001 0002 0001 0400 0200 0000 0000 0000




0F00 NO OPPERATION

1000 ADD: ADD A VALUE IN RAM TO THE VALUE STORED IN THE ACCUMULATOR

0001 0006 0010 0002 0400 0000 0000 0000

0001 0002 0001 0008 0004 0000 0000 0000

1100 SUB: SUB VALUE IN RAM FROM THE VALUE STORED IN THE ACCUMULATOR 

0001 0006 0010 0002 0800 0000 0000 0000

0001 0002 0001 0008 0004 0000 0000 0000

1200 CMP:  COMPARE VALUE IN ACCUMULATOR TO VALUE STORED IN THE RAM  

0001 0006 0010 0002 1000 0000 0000 0000 

0001 0002 0001 0008 0000 0000 0000 0000

1300 ADI: ADD AN IMMEDIATE VALUE TO THE VALUE STORED IN THE ACCUMULATOR

0001 0006 0010 0400 0000 0000 0000 0000

0001 0002 0008 0004 0000 0000 0000 0000

1400 SUI: SUB AN IMMEDIATE VALUE FROM THE VALUE STORED IN THE ACCUMULATOR

0001 0006 0010 0800 0000 0000 0000 0000

0001 0002 0008 0004 0000 0000 0000 0000




2000 SYX: STORE THE VALUE IN REGISTER Y TO THE RAM ADDRESS STORED IN REGISTER X

0001 0006 0020 0040 0000 0000 0000 0000

0001 0002 0001 0400 0000 0000 0000 0000

2100 SXY: STORE A VALUE FROM RAM AT ADDRESS SAVE IN REGISTER X TO REGISTER Y

0001 0006 0020 0002 0000 0000 0000 0000 

0001 0002 0001 0040 0000 0000 0000 0000 

2200 SYT: STORE THE VALUE FROM REGISTER Y TO TTY DISPLAY

0001 0006 0040 0000 0000 0000 0000 0000

0001 0002 0100 0000 0000 0000 0000 0000




3000 CAL: PUSH CURRENT PC TO THE STACK

0001 0006 0200 0001 0010 0000 0000 0000

0001 0002 0000 0800 2000 0000 0000 0000
 
3100 RET: JUMP TO THE ADDRESS AT CURRENT STACK POINTER  THEN POP THE STACK.

0001 0006 8000 0000 0000 0000 0000 0000

0001 0002 2000 0800 1000 0000 0000 0000

3200 CAI: PUSH PC TO STACK AND ADD IMMEDIATE TO UPPER 8 BITS OF THE ACC THE JUMP TO ADDRESS IN THE ACC





4000 LVA: LOAD IMEDIATE TO VRAM ADDRESS REGISTER

0001 0006 0010 0000 0000 0000 0000 0000

0001 0002 0080 0000 0000 0000 0000 0000 


4100 LVD: LOAD IMMEDIATE TO CURRENT VRAM ADDRESS.

0001 0006 0010 0000 0000 0000 0000 0000

0001 0002 4000 0000 0000 0000 0000 0000


4200 UPD: UPDATE PIXEL DISPLAY

0001 0006 0000 0000 0000 0000 0000 0000

0001 0002 8000 0000 0000 0000 0000 0000


4300 RVA: LOAD VALUE IN RAM TO THE ADDRESS REGISTER OF THE PIXEL DISPLAY

0001 0006 0010 0002 0000 0000 0000 0000

0001 0002 0001 0080 0000 0000 0000 0000


4400 RVD: LOAD VALUE IN RAM TO THE CURRENT ADDRESS OF THE PIXEL DISPLAY.

0001 0006 0010 0002 0000 0000 0000 0000 

0001 0002 0001 0400 0000 0000 0000 0000



5000 LNR:  NOT THE VALUE STORED IN THE ACCUMULATOR AND STORE IT TO RAM

0001 0006 0010 0000 0000 0000 0000 0000

0001 0002 0001 0400 0000 0000 0000 0000

0000 0000 0000 0001 0000 0000 0000 0000


5100 LAR: AND THE VALUE STORED IN THE ACCUMULATOR WITH A VALUE STORE IN RAM AND STORE IT IN THE ACC

0001 0006 0010 0002 0000 0000 0000 0000

0001 0002 0001 0008 0004 0000 0000 0000

0000 0000 0000 0000 0002 0000 0000 0000 


5200 LOR: OR THE VALUE STORED IN THE ACCUMULATOR WITH A VALUE IN RAM AND STORE IT TO THE ACC

0001 0006 0010 0002 0000 0000 0000 0000

0001 0002 0001 0008 0004 0000 0000 0000 

0000 0000 0000 0000 0004 0000 0000 0000

5300 LXR: XOR THE VALUE STORED IN THE ACCUMULATOR WITH A VALUE IN RAM

0001 0006 0010 0002 0000 0000 0000 0000

0001 0002 0001 0008 0004 0000 0000 0000

0000 0000 0000 0000 0008 0000 0000 0000



7000 JMP: JUMP TO PROGRAM ADDRESS

0001 0006 0010 0000 0000 0000 0000 0000

0001 0002 2000 0000 0000 0000 0000 0000

7100 JPL: jump if the less than flag is set.

0001 0006 0010 0000 0000 0000 0000 0000

0001 0002 2000 0010 0000 0000 0000 0000

7200 JPZ: JUMP IF ZERO FLAG IS SET 

0001 0006 0010 0000 0000 0000 0000 0000

0001 0002 2000 0010 0000 0000 0000 0000

7300 JPE: JUMP IF EQUALS FLAG IS SET

0001 0006 0010 0000 0000 0000 0000 0000

0001 0002 2000 0010 0000 0000 0000 0000

7400 JPG: jump if the greater flag is set

0001 0006 0010 0000 0000 0000 0000 0000

0001 0002 2000 0010 0000 0000 0000 0000

7500 JPC: Jump if the carry flag is set

0001 0006 0010 0000 0000 0000 0000 0000

0001 0002 2000 0010 0000 0000 0000 0000

7600 JPY: JUMP TO THE ADDRESS SAVE IN THE Y REGISTER

0001 0006 0040 0000 0000 0000 0000 0000 

0001 0002 2000 0000 0000 0000 0000 0000

7700 AIJ: ADD IMMEDIATE VALUE TO THE UPPER 8 BITS OF THE VALUE STORED IN THE ACCUMULATOR THEN JUMP TO THAT ADDRESS

0001 0006 4000 0400 2000 0000 0000 0000 

0001 0002 0008 0004 2000 0000 0000 0000

REPLACE THE XX'S WITH THE HEX VALUE FOR THE RAM ADDRESS OR FOR THE JUMP ADDRESS OR FOR THE IMMEDIATE VALUE 00 TO FF

7800 AIE: ADD IMMEDIATE VALUE TO THE UPPER 8 BITS OF THE ACCUMULATOR THEN JUMP TO THE ADDRESS IN THE ACCUMULATOR IF THE EQUALS FLAG IS SET

0001 0006 4000 0400 2000 0000 0000 0000

0001 0003 0008 0004 2000 0000 0000 0000




NOP: 0000 - No operation is performed.

Load values from RAM to a register or the display.

LDA: 01XX - Load a value from RAM into the accumulator.
LDB: 02XX - Load a value from RAM into register B.
LDX: 03XX - Load a value from RAM into register X.
LDY: 04XX - Load a value from RAM into register Y.
LDT: 05XX - Load a value from RAM into the TTY display.


Load an immediate value to a register or the display.

LIA: 06XX - Load an immediate value into the accumulator.
LIB: 07XX - Load an immediate value into register B.
LIX: 08XX - Load an immediate value into register X.
LIY: 09XX - Load an immediate value into register Y.
LIT: 0AXX - Load an immediate value into the TTY display.

Store the value in a register value or the keyboard buffer to RAM

STA: 0BXX - Store the accumulator value into RAM.
STB: 0CXX - Store the value of register B into RAM.
STX: 0DXX - Store the value of register X into RAM.
STY: 0EXX - Store the value of register Y into RAM.
STK: 0FXX - STORE THE VALUE OF THE KEYBOARD REGISTER  INTO RAM

ALU Functions ALL ALU FUNCTIONS WILL SET FLAGS REALTED TO THEIR OPPERATION.

ADD: 10XX - Add a value from RAM to the value stored in the accumulator.
SUB: 11XX - Subtract a value from RAM from the value stored in the accumulator.
CMP: 12XX - Compare the value in the accumulator to the value stored in RAM.

ADI: 13XX - Add an IMMEDIATE value to the value stored in the accumulator.
SUI: 14XX - Sub an IMMEDIATE value from the value stored in the accumulator.


SYX: 20XX - Store the value of register Y into the memory address specified by the value in register X.
SXY: 21XX - LOAD A VALUE IN RAM AT ADDRESS STORED IN REGISTER X TO REGISTER Y
SYT: 22XX - STORE VALUE FROM REGISTER Y TO TTY DISPLAY 

CALL AND RETURN FUNCTIONS

CAL 30XX - PUSH CURRENT PC TO THE STACK AND JUMP TO OPERAND

RET 31XX - JUMP TO THE ADDRESS AT CURRENT STACK POINTER  THEN POP THE STACK.

CAI 32XX - PUSH CURRENT ADDRESS TO THE STACK POINTER THEN ADD IMMEDIATE TO THE UPPER 8 BITS OF THE ACCUMULATOR THEN JUMP TO THE ADDRESS IN THE ACCUMULATOR


PIXEL_DISPLAY_INSTRUCTIONS

40XX LVA: LOAD IMEDIATE TO VRAM ADDRESS REGISTER
41XX LVD: LOAD IMMEDIATE TO CURRENT VRAM ADDRESS.
42XX UPD: UPDATE PIXEL DISPLAY
43XX RVA: LOAD VALUE IN RAM TO THE ADDRESS REGISTER OF THE PIXEL DISPLAY
44XX RVD: LOAD VALUE IN RAM TO THE CURRENT ADDRESS OF THE PIXEL DISPLAY.

LOGIC OPERATIONS.

50XX LNR: NOT THE VALUE STORED IN THE ACCUMULATOR AND STORE IT TO RAM
51XX LAR: AND THE VALUE STORED IN THE ACCUMULATOR WITH A VALUE IN RAM AND STORE IT IN THE ACC
52XX LOR: OR THE VALUE STORED IN THE ACCUMULATOR WITH A VALUE IN RAM AND STORE IT TO THE ACC
53XX LXR: XOR THE VALUE IN THE ACCUMULATOR WITH A VALUE IN RAM AND STORE TO THE ACC




Program Branching/jumping.

JMP: 70XX - Jump to a program address.
JPL: 71XX - Jump if the a less than b  flag is set.
JPZ: 72XX - Jump if the zero flag is set.
JPE: 73XX - Jump if the equals flag is set.
JPG: 74XX - Jump if the A greater B flag is set
JPC: 75XX - Jump if the carry flag is SET
JPY: 76XX - Jump to the address stored in the x register

AIJ: 77XX - ADD IMMEDIATE VALUE TO THE UPPER 8 BITS OF THE ACCUMULATOR the jump to the value in the accumulator
AIE: 78XX - ADD IMMEDIATE VALUE TO THE UPPER 8 BITS OF THE ACCUMULATOR THEN JUMP TO THE ADDRESS IN THE ACCUMULATOR IF THE EQUALS FLAG IS SET


